-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE OR REPLACE FUNCTION public.trigger_set_timestamp()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$BODY$;

ALTER FUNCTION public.trigger_set_timestamp()
    OWNER TO postgres;

GRANT EXECUTE ON FUNCTION public.trigger_set_timestamp() TO authenticated;

GRANT EXECUTE ON FUNCTION public.trigger_set_timestamp() TO postgres;

GRANT EXECUTE ON FUNCTION public.trigger_set_timestamp() TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.trigger_set_timestamp() TO anon;

GRANT EXECUTE ON FUNCTION public.trigger_set_timestamp() TO service_role;

CREATE TABLE IF NOT EXISTS public.notes
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    inserted_at timestamp with time zone NOT NULL DEFAULT timezone('utc'::text, now()),
    content text COLLATE pg_catalog."default" DEFAULT ''::text,
    title text COLLATE pg_catalog."default" DEFAULT ''::text,
    tag uuid DEFAULT uuid_generate_v4(),
    updated_at timestamp with time zone DEFAULT now(),
    CONSTRAINT notes_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.notes
    OWNER to postgres;

GRANT ALL ON TABLE public.notes TO anon;

GRANT ALL ON TABLE public.notes TO authenticated;

GRANT ALL ON TABLE public.notes TO postgres;

GRANT ALL ON TABLE public.notes TO service_role;

CREATE TRIGGER set_timestamp
    BEFORE UPDATE 
    ON public.notes
    FOR EACH ROW
    EXECUTE FUNCTION public.trigger_set_timestamp();
